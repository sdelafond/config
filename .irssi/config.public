servers = (
  {
    address = "localhost";
    chatnet = "minbif";
    port = "6668";
    password = "FIXME";
    autoconnect = "yes";
  },
  {
    address = "FIXME.irc.slack.com";
    chatnet = "slack";
    port = "6667";
    password = "FIXME";
    autoconnect = "yes";
    use_ssl = "yes";
  },
  {
    address = "irc.oftc.net";
    chatnet = "oftc";
    port = "6697";
    use_ssl = "yes";
    autoconnect = "yes";
    password = "FIXME";
  },
  {
    address = "irc.freenode.net";
    chatnet = "freenode";
    port = "7000";
    use_ssl = "yes";
    autoconnect = "yes";
    password = "FIXME";
  },
);

chatnets = {
  freenode = {
    type = "IRC";
    autosendcmd = "/^SET autocreate_own_query OFF;/^MSG nickserv identify FIXME;wait 2000;/^SET autocreate_own_query ON";
    max_kicks = "4";
    max_msgs = "1";
    max_modes = "4";
    max_whois = "1";
  };
  oftc = {
    type = "IRC";
    autosendcmd = "/^SET autocreate_own_query OFF;/^MSG nickserv identify FIXME;/^SET autocreate_own_query ON";
    max_kicks = "4";
    max_msgs = "1";
    max_modes = "4";
    max_whois = "1";
  };
  minbif = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "4";
    max_msgs = "3";
    max_whois = "1";
  };
  slack = { type = "IRC"; };
};

channels = (
  {
    name = "#FIXME";
    chatnet = "oftc";
    autojoin = "yes";
    password = "FIXME";
  },
  { name = "&minbif"; chatnet = "minbif"; autojoin = "yes"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  UPTIME = "eval exec - expr `date +%s` - \\$F | awk '{print \"Irssi uptime: \"int(\\\\\\$1/3600/24)\"d \"int(\\\\\\$1/3600%24)\"h \"int(\\\\\\$1/60%60)\"m \"int(\\\\\\$1%60)\"s\" }'";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  CS = "/msg chanserv";
  CSINFO = "/msg chanserv info $0";
  CSIDENTIFY = "/msg chanserv identify $0 $1";
  CSACCESS = "/msg chanserv access $0 list";
  CSOP = "/msg chanserv op $C $0";
  CSDEOP = "/msg chanserv op $C -$0";
  CSKICK = "/msg chanserv op $C $N;/wait 50;/kick $0 $1-;/msg chanserv op $C -$N";
  CSBAN = "/msg chanserv op $C $N;/wait 50;/ban $0;/msg chanserv op $C -$N";
  CSMUTE = "/msg chanserv op $C $N;/wait 50;/mode +q $0;/msg chanserv op $C -$N";
  CSKICKBAN = "/msg chanserv op $C $N;/wait 50;/kb $0 $1-;/msg chanserv op $C -$N";
  CSUNBAN = "/msg chanserv op $C $N;/wait 50;/unban $0;/msg chanserv op $C -$N";
  CSTOPIC = "/msg chanserv op $C $N;/wait 50;/topic $0-;/msg chanserv op $C -$N";
  CSMODE = "/msg chanserv op $C $N;/wait 50;/mode $0;/msg chanserv op $C -$N";
  CSINVITE = "/msg chanserv op $C $N;/wait 50;/invite $0;/msg chanserv op $C -$N";
  SVSNICK = "/quote svsnick";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb $cumode$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        #        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        usercount = { };
        typing_notice = { };
        join_notice = { };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_0 = {
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_1 = {
      items = {
        barstart = { priority = "100"; };
        awl_1 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "FIXME FIXME";
    user_name = "FIXME";
    nick = "FIXME";
    recode_fallback = "UTF-8";
    log_timestamp = "%Y-%m-%d %H:%M:%S";
  };
  "fe-common/core" = {
    theme = "elf";
    autocreate_own_query = "yes";
    autocreate_query_level = "MSGS DCCMSGS";
    autocreate_windows = "on";
    beep_msg_level = "MSGS DCC DCCMSGS HILIGHT";
    use_status_window = "off";
    hilight_nick_matches = "off";
    autolog = "yes";
    autolog_level = "MSGS ALL -crap -clientcrap -ctcps";
    autolog_path = "~/.irssi/logs/$0";
    windows_auto_renumber = "off";
  };
  "perl/core/scripts" = {
    nicklist_width = "20";
    bitlbee_send_typing = "on";
    bitlbee_typing_allwin = "on";
    awl_prefer_name = "yes";
  };
  "fe-text" = { actlist_sort = "refnum"; };
  "irc/dcc" = { dcc_port = "10000 10005"; };
};

ignores = (
  #   { level = "MSGS"; pattern = "webcam"; fullword = "yes"; },
  #   { level = "MSGS"; pattern = "webcamera"; fullword = "yes"; }
  {
    level = "MODES";
    channels = ( "#FIXME", "#FIXME2" );
  },
  { level = "MODES"; networks = ( "slack" ); },
);
hilights = (
  {
    text = "[^a-zA-Z][F]IXME_*[\\w:,s]";
    color = "%Y";
    nick = "no";
    word = "no";
    regexp = "yes";
  },
  {
    #text = "^((?!::zabbix).)*$";
    text = ".*";
    color = "%Y";
    nick = "yes";
    word = "yes";
    regexp = "yes";
    channels = ( "#FIXME", "#FIXME2" );
  }
);
keyboard = (
  { key = "^b"; id = "backward_character"; data = ""; },
  { key = "\002"; id = "backward_character"; data = ""; },
  { key = "Ctrl-b"; id = "backward_character"; data = ""; },
  { key = "Ctrl-f"; id = "forward_character"; data = ""; },
  { key = "^f"; id = "forward_character"; data = ""; },
  { key = "\006"; id = "forward_character"; data = ""; },
  { key = "^F"; id = "forward_character"; data = ""; },
  { key = "^B"; id = "backward_character"; data = ""; },
  { key = "^P"; id = "backward_history"; data = ""; },
  { key = "^N"; id = "forward_history"; data = ""; },
  { key = "meta-p"; id = "change_window"; data = "20"; },
  { key = "meta-a"; id = "change_window"; data = "21"; },
  { key = "meta-u"; id = "change_window"; data = "17"; },
  { key = "meta-U"; id = "command"; data = "window goto active"; },
  { key = "meta-i"; id = "change_window"; data = "18"; },
  { key = "meta-o"; id = "change_window"; data = "19"; },
  { key = "meta-."; id = "command"; data = "window goto active"; },
  { key = "meta-s"; id = "change_window"; data = "22"; },
  { key = "meta-g"; id = "change_window"; data = "23"; },
  { key = "meta-h"; id = "change_window"; data = "24"; },
  { key = "meta-j"; id = "change_window"; data = "25"; },
  { key = "meta-k"; id = "change_window"; data = "26"; },
  { key = "meta-l"; id = "change_window"; data = "27"; },
  { key = "meta-m"; id = "change_window"; data = "28"; },
  { key = "meta-,"; id = "command"; data = "window goto active"; }
);
logs = { };

conversions = {
  "#gcu" = "iso-8859-1";
};
windows = {
  1 = {
    immortal = "yes";
    name = "(main)";
    level = "NOTICES SNOTES CLIENTNOTICES CLIENTCRAP CLIENTERRORS";
  };
  2 = {
    name = "&m";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "&minbif";
        tag = "minbif";
      }
    );
  };
  5 = {
    name = "#short";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#FIXME";
        tag = "oftc";
      }
    );
  };
};
